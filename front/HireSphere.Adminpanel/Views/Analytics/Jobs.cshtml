@model HireSphere.Adminpanel.Models.JobAnalyticsViewModel
@{
    ViewData["Title"] = "Job Analytics";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-briefcase me-2"></i>Job Analytics</h2>
    <div>
        <a href="@Url.Action("Dashboard")" class="btn btn-outline-primary me-2">
            <i class="fas fa-tachometer-alt me-1"></i>Dashboard
        </a>
        <a href="@Url.Action("Index", "Job")" class="btn btn-outline-secondary">
            <i class="fas fa-list me-1"></i>Manage Jobs
        </a>
    </div>
</div>

<!-- Job Statistics Overview -->
<div class="row mb-4">
    <div class="col-md-3 mb-3">
        <div class="card stat-card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-1">@Model.Statistics.TotalJobs</h4>
                        <p class="mb-0">Total Jobs</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-briefcase fa-2x opacity-75"></i>
                    </div>
                </div>
                <div class="mt-2">
                    <small>+@Model.Statistics.NewJobsThisMonth this month</small>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 mb-3">
        <div class="card stat-card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-1">@Model.Statistics.ActiveJobs</h4>
                        <p class="mb-0">Active Jobs</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
                <div class="mt-2">
                    <small>@Model.Statistics.InactiveJobs inactive</small>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 mb-3">
        <div class="card stat-card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-1">@Model.Statistics.RemoteJobs</h4>
                        <p class="mb-0">Remote Jobs</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-home fa-2x opacity-75"></i>
                    </div>
                </div>
                <div class="mt-2">
                    <small>@Model.Statistics.OnSiteJobs on-site</small>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-3 mb-3">
        <div class="card stat-card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-1">@Model.Statistics.ExpiredJobs</h4>
                        <p class="mb-0">Expired Jobs</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x opacity-75"></i>
                    </div>
                </div>
                <div class="mt-2">
                    <small>Need attention</small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row mb-4">
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-pie me-2"></i>Job Types Distribution</h5>
            </div>
            <div class="card-body">
                <canvas id="jobTypesChart" height="300"></canvas>
            </div>
        </div>
    </div>
    
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-line me-2"></i>Monthly Job Postings</h5>
            </div>
            <div class="card-body">
                <canvas id="monthlyJobsChart" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Top Companies and Recent Jobs -->
<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-building me-2"></i>Top Companies by Job Count</h5>
            </div>
            <div class="card-body">
                @if (Model.Statistics.TopCompanies.Any())
                {
                    <div class="list-group list-group-flush">
                        @foreach (var company in Model.Statistics.TopCompanies.Take(5))
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">@company.CompanyName</h6>
                                </div>
                                <span class="badge bg-primary">@company.JobCount jobs</span>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-3">
                        <i class="fas fa-building fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">No company data available</p>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-briefcase me-2"></i>Recent Jobs</h5>
            </div>
            <div class="card-body">
                @if (Model.RecentJobs.Any())
                {
                    <div class="list-group list-group-flush">
                        @foreach (var job in Model.RecentJobs)
                        {
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-1">@job.Title</h6>
                                    <small class="text-muted">@job.CompanyName</small>
                                    <br>
                                    <span class="badge bg-secondary">@job.JobType</span>
                                </div>
                                <small class="text-muted">@job.PostedAt.ToString("MMM dd, yyyy")</small>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-3">
                        <i class="fas fa-briefcase fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">No recent jobs found</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Job Types Chart
            const jobTypesCtx = document.getElementById('jobTypesChart').getContext('2d');
            new Chart(jobTypesCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Full Time', 'Part Time', 'Contract', 'Internship', 'Temporary'],
                    datasets: [{
                        data: [@Model.Statistics.JobTypeCounts.FirstOrDefault(j => j.JobType == "FullTime")?.Count ?? 0, 
                               @Model.Statistics.JobTypeCounts.FirstOrDefault(j => j.JobType == "PartTime")?.Count ?? 0,
                               @Model.Statistics.JobTypeCounts.FirstOrDefault(j => j.JobType == "Contract")?.Count ?? 0,
                               @Model.Statistics.JobTypeCounts.FirstOrDefault(j => j.JobType == "Internship")?.Count ?? 0,
                               @Model.Statistics.JobTypeCounts.FirstOrDefault(j => j.JobType == "Temporary")?.Count ?? 0],
                        backgroundColor: ['#007bff', '#28a745', '#ffc107', '#dc3545', '#6c757d']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            
            // Monthly Jobs Chart
            const monthlyJobsCtx = document.getElementById('monthlyJobsChart').getContext('2d');
            new Chart(monthlyJobsCtx, {
                type: 'line',
                data: {
                    labels: [@Html.Raw(string.Join(", ", Model.Statistics.MonthlyJobs.Select(m => $"'{m.Month}'")))],
                    datasets: [{
                        label: 'New Jobs',
                        data: [@string.Join(", ", Model.Statistics.MonthlyJobs.Select(m => m.Count))],
                        borderColor: '#28a745',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        });
    </script>
}
