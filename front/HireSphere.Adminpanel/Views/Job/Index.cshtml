@model HireSphere.Adminpanel.Models.JobIndexViewModel
@{
    ViewData["Title"] = "Jobs Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-briefcase me-2"></i>Jobs Management</h2>
    <div>
        <a href="@Url.Action("Create", "Job")" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i>Add New Job
        </a>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label for="search" class="form-label">Search</label>
                <input type="text" class="form-control" id="search" name="search" value="@Model.SearchTerm" placeholder="Search by title, company, or location...">
            </div>
            <div class="col-md-3">
                <label for="status" class="form-label">Status</label>
                <select class="form-select" id="status" name="status">
                    <option value="">All Status</option>
                    @foreach (var status in Model.StatusOptions)
                    {
                        @if (Model.StatusFilter == status)
                        {
                            <option value="@status" selected>@status</option>
                        }
                        else
                        {
                            <option value="@status">@status</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label for="pageSize" class="form-label">Per Page</label>
                <select class="form-select" id="pageSize" name="pageSize">
                    @if (Model.PageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }
                    @if (Model.PageSize == 25)
                    {
                        <option value="25" selected>25</option>
                    }
                    else
                    {
                        <option value="25">25</option>
                    }
                    @if (Model.PageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fas fa-search me-1"></i>Search
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-times me-1"></i>Clear
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Jobs Table -->
<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Jobs (@Model.Jobs.Count)</h5>
    </div>
    <div class="card-body p-0">
        @if (Model.Jobs.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Job Title</th>
                            <th>Company</th>
                            <th>Type</th>
                            <th>Location</th>
                            <th>Salary</th>
                            <th>Status</th>
                            <th>Applications</th>
                            <th>Posted</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var job in Model.Jobs)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@job.Title</strong>
                                        @if (job.IsRemote)
                                        {
                                            <span class="badge bg-info ms-1">Remote</span>
                                        }
                                    </div>
                                    <small class="text-muted">@job.CategoryName</small>
                                </td>
                                <td>@job.CompanyName</td>
                                <td>
                                    <span class="badge bg-secondary">@job.JobType</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(job.Location))
                                    {
                                        <i class="fas fa-map-marker-alt me-1"></i>@job.Location
                                    }
                                    else
                                    {
                                        <span class="text-muted">Not specified</span>
                                    }
                                </td>
                                <td>@job.SalaryRange</td>
                                <td>
                                    <span class="badge bg-@(job.IsActive ? "success" : "danger")">
                                        @job.Status
                                    </span>
                                </td>
                                <td>
                                    <span class="badge bg-primary">@job.ApplicationCount</span>
                                </td>
                                <td>
                                    <small>@job.PostedAt.ToString("MMM dd, yyyy")</small>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Details", new { id = job.Id })" class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", new { id = job.Id })" class="btn btn-sm btn-outline-warning" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form method="post" action="@Url.Action("ToggleStatus", new { id = job.Id })" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-@(job.IsActive ? "danger" : "success")" 
                                                    title="@(job.IsActive ? "Deactivate" : "Activate")"
                                                    onclick="return confirm('Are you sure you want to @(job.IsActive ? "deactivate" : "activate") this job?')">
                                                <i class="fas fa-@(job.IsActive ? "pause" : "play")"></i>
                                            </button>
                                        </form>
                                        <form method="post" action="@Url.Action("Delete", new { id = job.Id })" class="d-inline">
                                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete"
                                                    onclick="return confirm('Are you sure you want to delete this job? This action cannot be undone.')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-briefcase fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No jobs found</h5>
                <p class="text-muted">Try adjusting your search criteria or add a new job.</p>
                <a href="@Url.Action("Create", "Job")" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>Add New Job
                </a>
            </div>
        }
    </div>
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Jobs pagination" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize, search = Model.SearchTerm, status = Model.StatusFilter })">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
            }
            
            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, search = Model.SearchTerm, status = Model.StatusFilter })">@i</a>
                </li>
            }
            
            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize, search = Model.SearchTerm, status = Model.StatusFilter })">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}
